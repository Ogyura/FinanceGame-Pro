"use client"

import { useState } from "react"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { Progress } from "@/components/ui/progress"
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"
import { Label } from "@/components/ui/label"
import { Input } from "@/components/ui/input"
import { Textarea } from "@/components/ui/textarea"
import {
  BarChart3,
  Users,
  Trophy,
  BookOpen,
  TrendingUp,
  Target,
  Award,
  Smartphone,
  Play,
  Coins,
  CheckCircle,
  User,
  LogOut,
  Calendar,
} from "lucide-react"

export default function TeacherPlatform() {
  const [activeTab, setActiveTab] = useState("dashboard")
  const [currentQuiz, setCurrentQuiz] = useState(null)
  const [userAnswers, setUserAnswers] = useState({})
  const [quizScore, setQuizScore] = useState(0)
  const [gameCoins, setGameCoins] = useState(1250)
  const [activeScenario, setActiveScenario] = useState(null)
  const [scenarioStep, setScenarioStep] = useState(0)
  const [playerMoney, setPlayerMoney] = useState(50000)
  const [qrScannerActive, setQrScannerActive] = useState(false)
  const [scannedQR, setScannedQR] = useState(null)
  const [arActive, setArActive] = useState(false)
  const [arVisualization, setArVisualization] = useState(null)

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const [isAuthenticated, setIsAuthenticated] = useState(false)
  const [showLogin, setShowLogin] = useState(true)
  const [user, setUser] = useState(null)

  // –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –±–∞–∑–∞ –∫–≤–∏–∑–æ–≤
  const quizCategories = [
    {
      id: "budgeting",
      title: "–ë—é–¥–∂–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
      description: "–û—Å–Ω–æ–≤—ã –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ª–∏—á–Ω–æ–≥–æ –±—é–¥–∂–µ—Ç–∞",
      icon: "üí∞",
      reward: 50,
      difficulty: "–õ–µ–≥–∫–∏–π",
      questions: [
        {
          id: 1,
          question: "–ß—Ç–æ —Ç–∞–∫–æ–µ –ø—Ä–∞–≤–∏–ª–æ 50/30/20 –≤ –±—é–¥–∂–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏?",
          options: [
            "50% –Ω–∞ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è, 30% –Ω–∞ –µ–¥—É, 20% –Ω–∞ –æ–¥–µ–∂–¥—É",
            "50% –Ω–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–∞—Å—Ö–æ–¥—ã, 30% –Ω–∞ –∂–µ–ª–∞–Ω–∏—è, 20% –Ω–∞ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è",
            "50% –Ω–∞ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è, 30% –Ω–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏, 20% –Ω–∞ —Ä–∞—Å—Ö–æ–¥—ã",
            "50% –Ω–∞ –∞—Ä–µ–Ω–¥—É, 30% –Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç, 20% –Ω–∞ –µ–¥—É",
          ],
          correct: 1,
          explanation:
            "–ü—Ä–∞–≤–∏–ª–æ 50/30/20 –ø–æ–º–æ–≥–∞–µ—Ç —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–æ—Ö–æ–¥—ã: 50% –Ω–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–∞—Å—Ö–æ–¥—ã, 30% –Ω–∞ –∂–µ–ª–∞–Ω–∏—è –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è, 20% –Ω–∞ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏.",
        },
        {
          id: 2,
          question: "–ö–∞–∫–æ–π –ø–µ—Ä–≤—ã–π —à–∞–≥ –ø—Ä–∏ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –±—é–¥–∂–µ—Ç–∞?",
          options: [
            "–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ü–µ–ª–∏ —Å–±–µ—Ä–µ–∂–µ–Ω–∏–π",
            "–ü–æ–¥—Å—á–∏—Ç–∞—Ç—å –≤—Å–µ –¥–æ—Ö–æ–¥—ã",
            "–°–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤",
            "–û—Ç–∫—Ä—ã—Ç—å —Å–±–µ—Ä–µ–≥–∞—Ç–µ–ª—å–Ω—ã–π —Å—á–µ—Ç",
          ],
          correct: 1,
          explanation:
            "–ü–µ—Ä–≤—ã–π —à–∞–≥ - —Ç–æ—á–Ω–æ –∑–Ω–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥ –ø–æ—Å—Ç—É–ø–∞–µ—Ç. –¢–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –º–æ–∂–Ω–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å—Ö–æ–¥—ã.",
        },
        {
          id: 3,
          question: "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç '—ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π —Ñ–æ–Ω–¥'?",
          options: [
            "–î–µ–Ω—å–≥–∏ –Ω–∞ –æ—Ç–ø—É—Å–∫",
            "–°—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã",
            "–î–µ–Ω—å–≥–∏ –Ω–∞ –ø–æ–∫—É–ø–∫–∏",
            "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å",
          ],
          correct: 1,
          explanation:
            "–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π —Ñ–æ–Ω–¥ - —ç—Ç–æ —Ä–µ–∑–µ—Ä–≤ –¥–µ–Ω–µ–≥ –Ω–∞ —Å–ª—É—á–∞–π –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π (–ø–æ—Ç–µ—Ä—è —Ä–∞–±–æ—Ç—ã, –±–æ–ª–µ–∑–Ω—å, —Å—Ä–æ—á–Ω—ã–π —Ä–µ–º–æ–Ω—Ç).",
        },
        {
          id: 4,
          question: "–ö–∞–∫–æ–π –ø—Ä–æ—Ü–µ–Ω—Ç –¥–æ—Ö–æ–¥–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ç—Ä–∞—Ç–∏—Ç—å –Ω–∞ –∂–∏–ª—å–µ?",
          options: ["–ù–µ –±–æ–ª–µ–µ 20%", "–ù–µ –±–æ–ª–µ–µ 30%", "–ù–µ –±–æ–ª–µ–µ 50%", "–ù–µ –±–æ–ª–µ–µ 70%"],
          correct: 1,
          explanation: "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —ç–∫—Å–ø–µ—Ä—Ç—ã —Ä–µ–∫–æ–º–µ–Ω–¥—É—é—Ç —Ç—Ä–∞—Ç–∏—Ç—å –Ω–µ –±–æ–ª–µ–µ 30% –¥–æ—Ö–æ–¥–∞ –Ω–∞ –∂–∏–ª—å–µ (–∞—Ä–µ–Ω–¥–∞ –∏–ª–∏ –∏–ø–æ—Ç–µ–∫–∞).",
        },
        {
          id: 5,
          question: "–ß—Ç–æ —Ç–∞–∫–æ–µ '–Ω—É–ª–µ–≤–æ–π –±—é–¥–∂–µ—Ç'?",
          options: [
            "–ë—é–¥–∂–µ—Ç –±–µ–∑ –¥–æ—Ö–æ–¥–æ–≤",
            "–ë—é–¥–∂–µ—Ç, –≥–¥–µ –¥–æ—Ö–æ–¥—ã –º–∏–Ω—É—Å —Ä–∞—Å—Ö–æ–¥—ã —Ä–∞–≤–Ω—ã –Ω—É–ª—é",
            "–ë—é–¥–∂–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–∞—Å—Ö–æ–¥—ã",
            "–ë—é–¥–∂–µ—Ç –±–µ–∑ —Å–±–µ—Ä–µ–∂–µ–Ω–∏–π",
          ],
          correct: 1,
          explanation:
            "–ù—É–ª–µ–≤–æ–π –±—é–¥–∂–µ—Ç –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –∫–∞–∂–¥—ã–π —Ä—É–±–ª—å –¥–æ—Ö–æ–¥–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º, –≤–∫–ª—é—á–∞—è —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è.",
        },
      ],
    },
    {
      id: "savings",
      title: "–°–±–µ—Ä–µ–∂–µ–Ω–∏—è",
      description: "–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–µ–Ω–µ–≥",
      icon: "üè¶",
      reward: 60,
      difficulty: "–õ–µ–≥–∫–∏–π",
      questions: [
        {
          id: 1,
          question: "–ö–∞–∫–æ–π —Ä–∞–∑–º–µ—Ä —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ —Ñ–æ–Ω–¥–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —ç–∫—Å–ø–µ—Ä—Ç—ã?",
          options: ["1-2 –º–µ—Å—è—á–Ω—ã—Ö –¥–æ—Ö–æ–¥–∞", "3-6 –º–µ—Å—è—á–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤", "–ü–æ–ª–æ–≤–∏–Ω–∞ –≥–æ–¥–æ–≤–æ–≥–æ –¥–æ—Ö–æ–¥–∞", "10% –æ—Ç –∑–∞—Ä–ø–ª–∞—Ç—ã"],
          correct: 1,
          explanation:
            "–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π —Ñ–æ–Ω–¥ –¥–æ–ª–∂–µ–Ω –ø–æ–∫—Ä—ã–≤–∞—Ç—å 3-6 –º–µ—Å—è—Ü–µ–≤ –≤–∞—à–∏—Ö –æ–±—ã—á–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤ –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.",
        },
        {
          id: 2,
          question: "–ß—Ç–æ —Ç–∞–∫–æ–µ —Å–ª–æ–∂–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç?",
          options: [
            "–ü—Ä–æ—Ü–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–ª–æ–∂–Ω–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å",
            "–ü—Ä–æ—Ü–µ–Ω—Ç –Ω–∞ –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –ø–µ—Ä–∏–æ–¥–æ–≤",
            "–í—ã—Å–æ–∫–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –ø–æ –∫—Ä–µ–¥–∏—Ç—É",
            "–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ –≤–∞–ª—é—Ç–Ω—ã–º –≤–∫–ª–∞–¥–∞–º",
          ],
          correct: 1,
          explanation:
            "–°–ª–æ–∂–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç - —ç—Ç–æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –Ω–µ —Ç–æ–ª—å–∫–æ –Ω–∞ –æ—Å–Ω–æ–≤–Ω—É—é —Å—É–º–º—É, –Ω–æ –∏ –Ω–∞ —Ä–∞–Ω–µ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã.",
        },
        {
          id: 3,
          question: "–ö–∞–∫–æ–π –ø—Ä–∏–Ω—Ü–∏–ø –ø–æ–º–æ–≥–∞–µ—Ç —Ä–µ–≥—É–ª—è—Ä–Ω–æ –æ—Ç–∫–ª–∞–¥—ã–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏?",
          options: [
            "–û—Ç–∫–ª–∞–¥—ã–≤–∞—Ç—å —Ç–æ, —á—Ç–æ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –≤ –∫–æ–Ω—Ü–µ –º–µ—Å—è—Ü–∞",
            "–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø–ª–∞—Ç–∏ —Å–µ–±–µ",
            "–ö–æ–ø–∏—Ç—å —Ç–æ–ª—å–∫–æ –∫—Ä—É–ø–Ω—ã–µ —Å—É–º–º—ã",
            "–û—Ç–∫–ª–∞–¥—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–µ–º–∏–∏",
          ],
          correct: 1,
          explanation:
            "–ü—Ä–∏–Ω—Ü–∏–ø '–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø–ª–∞—Ç–∏ —Å–µ–±–µ' –æ–∑–Ω–∞—á–∞–µ—Ç –æ—Ç–∫–ª–∞–¥—ã–≤–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é —Å—É–º–º—É —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Ö–æ–¥–∞.",
        },
        {
          id: 4,
          question: "–ì–¥–µ –ª—É—á—à–µ —Ö—Ä–∞–Ω–∏—Ç—å —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π —Ñ–æ–Ω–¥?",
          options: [
            "–í –∞–∫—Ü–∏—è—Ö",
            "–ù–∞ –¥–µ–ø–æ–∑–∏—Ç–µ —Å –≤—ã—Å–æ–∫–æ–π –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å—é",
            "–ù–∞ –ª–µ–≥–∫–æ–¥–æ—Å—Ç—É–ø–Ω–æ–º —Å–±–µ—Ä–µ–≥–∞—Ç–µ–ª—å–Ω–æ–º —Å—á–µ—Ç–µ",
            "–í –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ",
          ],
          correct: 2,
          explanation: "–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π —Ñ–æ–Ω–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ª–µ–≥–∫–æ–¥–æ—Å—Ç—É–ø–Ω—ã–º, –ø–æ—ç—Ç–æ–º—É –ª—É—á—à–µ –¥–µ—Ä–∂–∞—Ç—å –µ–≥–æ –Ω–∞ —Å–±–µ—Ä–µ–≥–∞—Ç–µ–ª—å–Ω–æ–º —Å—á–µ—Ç–µ.",
        },
      ],
    },
    {
      id: "investments",
      title: "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏",
      description: "–û—Å–Ω–æ–≤—ã –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∏—Å–∫–∞–º–∏",
      icon: "üìà",
      reward: 80,
      difficulty: "–°—Ä–µ–¥–Ω–∏–π",
      questions: [
        {
          id: 1,
          question: "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –¥–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π?",
          options: [
            "–ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ –≤ –∞–∫—Ü–∏–∏",
            "–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –ø–æ —Ä–∞–∑–Ω—ã–º –∞–∫—Ç–∏–≤–∞–º",
            "–ü–æ–∫—É–ø–∫–∞ –¥–æ—Ä–æ–≥–∏—Ö –∞–∫—Ü–∏–π",
            "–ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –æ–¥–Ω—É –∫–æ–º–ø–∞–Ω–∏—é",
          ],
          correct: 1,
          explanation:
            "–î–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏—è - —ç—Ç–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –º–µ–∂–¥—É —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –∞–∫—Ç–∏–≤–æ–≤ –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è —Ä–∏—Å–∫–æ–≤.",
        },
        {
          id: 2,
          question: "–ß—Ç–æ —Ç–∞–∫–æ–µ –ò–ò–° (–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π —Å—á–µ—Ç)?",
          options: [
            "–û–±—ã—á–Ω—ã–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á–µ—Ç",
            "–°—á–µ—Ç —Å –Ω–∞–ª–æ–≥–æ–≤—ã–º–∏ –ª—å–≥–æ—Ç–∞–º–∏ –¥–ª—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π",
            "–ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞",
            "–î–µ–ø–æ–∑–∏—Ç –≤ –±–∞–Ω–∫–µ",
          ],
          correct: 1,
          explanation: "–ò–ò–° - —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å—á–µ—Ç, –∫–æ—Ç–æ—Ä—ã–π –¥–∞–µ—Ç –Ω–∞–ª–æ–≥–æ–≤—ã–µ –ª—å–≥–æ—Ç—ã –ø—Ä–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤ —Ü–µ–Ω–Ω—ã–µ –±—É–º–∞–≥–∏.",
        },
        {
          id: 3,
          question: "–ö–∞–∫–æ–π –ø—Ä–∏–Ω—Ü–∏–ø –≤–∞–∂–µ–Ω –¥–ª—è –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–≥–æ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è?",
          options: [
            "–ü–æ–∫—É–ø–∞—Ç—å –Ω–∞ –ø–∏–∫–µ —Ä—ã–Ω–∫–∞",
            "–†–µ–≥—É–ª—è—Ä–Ω–æ—Å—Ç—å –∏ —Ç–µ—Ä–ø–µ–Ω–∏–µ",
            "–°–ª–µ–¥–æ–≤–∞—Ç—å —ç–º–æ—Ü–∏—è–º",
            "–ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è",
          ],
          correct: 1,
          explanation:
            "–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–µ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—Ä–µ–±—É–µ—Ç —Ä–µ–≥—É–ª—è—Ä–Ω–æ—Å—Ç–∏, —Ç–µ—Ä–ø–µ–Ω–∏—è –∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã, –∞ –Ω–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π.",
        },
        {
          id: 4,
          question: "–ß—Ç–æ —Ç–∞–∫–æ–µ ETF?",
          options: ["–û—Ç–¥–µ–ª—å–Ω–∞—è –∞–∫—Ü–∏—è –∫–æ–º–ø–∞–Ω–∏–∏", "–ë–∏—Ä–∂–µ–≤–æ–π –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π —Ñ–æ–Ω–¥", "–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –¥–µ–ø–æ–∑–∏—Ç", "–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞"],
          correct: 1,
          explanation:
            "ETF (Exchange Traded Fund) - —ç—Ç–æ –±–∏—Ä–∂–µ–≤–æ–π —Ñ–æ–Ω–¥, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –∏–ª–∏ –∫–æ—Ä–∑–∏–Ω—É –∞–∫—Ç–∏–≤–æ–≤.",
        },
      ],
    },
    {
      id: "taxes",
      title: "–ù–∞–ª–æ–≥–∏",
      description: "–û—Å–Ω–æ–≤—ã –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏—è –∏ –Ω–∞–ª–æ–≥–æ–≤–æ–≥–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è",
      icon: "üìã",
      reward: 70,
      difficulty: "–°—Ä–µ–¥–Ω–∏–π",
      questions: [
        {
          id: 1,
          question: "–ö–∞–∫–∞—è —Å—Ç–∞–≤–∫–∞ –ø–æ–¥–æ—Ö–æ–¥–Ω–æ–≥–æ –Ω–∞–ª–æ–≥–∞ –≤ –†–æ—Å—Å–∏–∏ –¥–ª—è —Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–≤?",
          options: ["10%", "13%", "15%", "20%"],
          correct: 1,
          explanation: "–ë–∞–∑–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞ –ø–æ–¥–æ—Ö–æ–¥–Ω–æ–≥–æ –Ω–∞–ª–æ–≥–∞ (–ù–î–§–õ) –¥–ª—è —Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–≤ –†–§ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 13%.",
        },
        {
          id: 2,
          question: "–ß—Ç–æ —Ç–∞–∫–æ–µ –Ω–∞–ª–æ–≥–æ–≤—ã–π –≤—ã—á–µ—Ç?",
          options: [
            "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –Ω–∞–ª–æ–≥",
            "–°—É–º–º–∞, —É–º–µ–Ω—å—à–∞—é—â–∞—è –Ω–∞–ª–æ–≥–æ–æ–±–ª–∞–≥–∞–µ–º—ã–π –¥–æ—Ö–æ–¥",
            "–®—Ç—Ä–∞—Ñ –∑–∞ –Ω–µ—É–ø–ª–∞—Ç—É –Ω–∞–ª–æ–≥–æ–≤",
            "–ù–∞–ª–æ–≥ –Ω–∞ –∏–º—É—â–µ—Å—Ç–≤–æ",
          ],
          correct: 1,
          explanation:
            "–ù–∞–ª–æ–≥–æ–≤—ã–π –≤—ã—á–µ—Ç - —ç—Ç–æ —Å—É–º–º–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è –Ω–∞–ª–æ–≥–æ–æ–±–ª–∞–≥–∞–µ–º—ã–π –¥–æ—Ö–æ–¥ –∏–ª–∏ —É–ø–ª–∞—á–µ–Ω–Ω—ã–π –Ω–∞–ª–æ–≥.",
        },
        {
          id: 3,
          question: "–î–æ –∫–∞–∫–æ–≥–æ —á–∏—Å–ª–∞ –Ω—É–∂–Ω–æ –ø–æ–¥–∞—Ç—å –¥–µ–∫–ª–∞—Ä–∞—Ü–∏—é –æ –¥–æ—Ö–æ–¥–∞—Ö?",
          options: ["31 –º–∞—Ä—Ç–∞", "30 –∞–ø—Ä–µ–ª—è", "31 –º–∞—è", "30 –∏—é–Ω—è"],
          correct: 0,
          explanation: "–î–µ–∫–ª–∞—Ä–∞—Ü–∏—é –æ –¥–æ—Ö–æ–¥–∞—Ö –∑–∞ –ø—Ä–æ—à–ª—ã–π –≥–æ–¥ –Ω—É–∂–Ω–æ –ø–æ–¥–∞—Ç—å –¥–æ 31 –º–∞—Ä—Ç–∞ —Ç–µ–∫—É—â–µ–≥–æ –≥–æ–¥–∞.",
        },
        {
          id: 4,
          question: "–ö–∞–∫–æ–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∏–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤—ã—á–µ—Ç–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∂–∏–ª—å—è?",
          options: ["1 –º–ª–Ω —Ä—É–±–ª–µ–π", "2 –º–ª–Ω —Ä—É–±–ª–µ–π", "3 –º–ª–Ω —Ä—É–±–ª–µ–π", "5 –º–ª–Ω —Ä—É–±–ª–µ–π"],
          correct: 1,
          explanation: "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∏–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤—ã—á–µ—Ç–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∂–∏–ª—å—è —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 2 –º–ª–Ω —Ä—É–±–ª–µ–π.",
        },
      ],
    },
    {
      id: "entrepreneurship",
      title: "–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å—Ç–≤–æ",
      description: "–û—Å–Ω–æ–≤—ã –≤–µ–¥–µ–Ω–∏—è –±–∏–∑–Ω–µ—Å–∞ –∏ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å–∫–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
      icon: "üöÄ",
      reward: 90,
      difficulty: "–°–ª–æ–∂–Ω—ã–π",
      questions: [
        {
          id: 1,
          question: "–ß—Ç–æ —Ç–∞–∫–æ–µ –±–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω?",
          options: [
            "–ü–ª–∞–Ω –æ—Ç–ø—É—Å–∫–∞",
            "–î–æ–∫—É–º–µ–Ω—Ç, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π —Å—Ç—Ä–∞—Ç–µ–≥–∏—é —Ä–∞–∑–≤–∏—Ç–∏—è –±–∏–∑–Ω–µ—Å–∞",
            "–°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫",
            "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã",
          ],
          correct: 1,
          explanation:
            "–ë–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω - —ç—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ–ø–∏—Å—ã–≤–∞–µ—Ç —Ü–µ–ª–∏ –±–∏–∑–Ω–µ—Å–∞, —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø—Ä–æ–≥–Ω–æ–∑—ã.",
        },
        {
          id: 2,
          question: "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä–∞ –ò–ü?",
          options: [
            "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å",
            "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç",
            "–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å",
            "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –ø–æ—Ä—Ç–∞–ª",
          ],
          correct: 0,
          explanation: "–ò–ü - —ç—Ç–æ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å, —Ñ–æ—Ä–º–∞ –≤–µ–¥–µ–Ω–∏—è –±–∏–∑–Ω–µ—Å–∞ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–º –ª–∏—Ü–æ–º.",
        },
        {
          id: 3,
          question: "–ß—Ç–æ —Ç–∞–∫–æ–µ —Ç–æ—á–∫–∞ –±–µ–∑—É–±—ã—Ç–æ—á–Ω–æ—Å—Ç–∏?",
          options: [
            "–ú–æ–º–µ–Ω—Ç –∑–∞–∫—Ä—ã—Ç–∏—è –±–∏–∑–Ω–µ—Å–∞",
            "–û–±—ä–µ–º –ø—Ä–æ–¥–∞–∂, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –¥–æ—Ö–æ–¥—ã —Ä–∞–≤–Ω—ã —Ä–∞—Å—Ö–æ–¥–∞–º",
            "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–∏–±—ã–ª—å",
            "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞",
          ],
          correct: 1,
          explanation: "–¢–æ—á–∫–∞ –±–µ–∑—É–±—ã—Ç–æ—á–Ω–æ—Å—Ç–∏ - —ç—Ç–æ –æ–±—ä–µ–º –ø—Ä–æ–¥–∞–∂, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –æ–±—â–∏–µ –¥–æ—Ö–æ–¥—ã —Ä–∞–≤–Ω—ã –æ–±—â–∏–º —Ä–∞—Å—Ö–æ–¥–∞–º.",
        },
        {
          id: 4,
          question: "–ö–∞–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏—è —á–∞—Å—Ç–æ –≤—ã–≥–æ–¥–Ω–∞ –¥–ª—è –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞?",
          options: ["–û–°–ù–û", "–£–°–ù", "–ï–ù–í–î", "–ü–°–ù"],
          correct: 1,
          explanation: "–£–°–ù (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏—è) —á–∞—Å—Ç–æ –≤—ã–≥–æ–¥–Ω–∞ –¥–ª—è –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞ –∏–∑-–∑–∞ –Ω–∏–∑–∫–∏—Ö —Å—Ç–∞–≤–æ–∫.",
        },
      ],
    },
    {
      id: "banking",
      title: "–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —É—Å–ª—É–≥–∏",
      description: "–†–∞–±–æ—Ç–∞ —Å –±–∞–Ω–∫–∞–º–∏ –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º–∏ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏",
      icon: "üèõÔ∏è",
      reward: 55,
      difficulty: "–õ–µ–≥–∫–∏–π",
      questions: [
        {
          id: 1,
          question: "–ß—Ç–æ —Ç–∞–∫–æ–µ –æ–≤–µ—Ä–¥—Ä–∞—Ñ—Ç?",
          options: [
            "–í–∏–¥ –¥–µ–ø–æ–∑–∏—Ç–∞",
            "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ç—Ä–∞—Ç–∏—Ç—å –±–æ–ª—å—à–µ, —á–µ–º –µ—Å—Ç—å –Ω–∞ —Å—á–µ—Ç–µ",
            "–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞",
            "–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ –≤–∫–ª–∞–¥—É",
          ],
          correct: 1,
          explanation:
            "–û–≤–µ—Ä–¥—Ä–∞—Ñ—Ç - —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ç—Ä–∞—Ç–∏—Ç—å –¥–µ–Ω—å–≥–∏ —Å–≤–µ—Ä—Ö –æ—Å—Ç–∞—Ç–∫–∞ –Ω–∞ —Å—á–µ—Ç–µ, —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–π –∫—Ä–µ–¥–∏—Ç.",
        },
        {
          id: 2,
          question: "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä–∞ –ê–°–í?",
          options: [
            "–ê–≥–µ–Ω—Ç—Å—Ç–≤–æ –ø–æ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—é –≤–∫–ª–∞–¥–æ–≤",
            "–ê—Å—Å–æ—Ü–∏–∞—Ü–∏—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –±–∞–Ω–∫–æ–≤",
            "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ –≤—ã–ø–ª–∞—Ç",
            "–ê–≥–µ–Ω—Ç—Å—Ç–≤–æ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è",
          ],
          correct: 0,
          explanation: "–ê–°–í - –ê–≥–µ–Ω—Ç—Å—Ç–≤–æ –ø–æ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—é –≤–∫–ª–∞–¥–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –≤–æ–∑–≤—Ä–∞—Ç –≤–∫–ª–∞–¥–æ–≤ –¥–æ 1,4 –º–ª–Ω —Ä—É–±–ª–µ–π.",
        },
        {
          id: 3,
          question: "–ö–∞–∫–∞—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è –≤–∫–ª–∞–¥–æ–≤ –≤ –†–æ—Å—Å–∏–∏?",
          options: ["1 –º–ª–Ω —Ä—É–±–ª–µ–π", "1,4 –º–ª–Ω —Ä—É–±–ª–µ–π", "2 –º–ª–Ω —Ä—É–±–ª–µ–π", "5 –º–ª–Ω —Ä—É–±–ª–µ–π"],
          correct: 1,
          explanation:
            "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è –≤–∫–ª–∞–¥–æ–≤ –≤ –†–æ—Å—Å–∏–∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 1,4 –º–ª–Ω —Ä—É–±–ª–µ–π –Ω–∞ –æ–¥–Ω–æ–≥–æ –≤–∫–ª–∞–¥—á–∏–∫–∞ –≤ –æ–¥–Ω–æ–º –±–∞–Ω–∫–µ.",
        },
        {
          id: 4,
          question: "–ß—Ç–æ —Ç–∞–∫–æ–µ —ç–∫–≤–∞–π—Ä–∏–Ω–≥?",
          options: ["–û—Ç–∫—Ä—ã—Ç–∏–µ —Å—á–µ—Ç–∞ –≤ –±–∞–Ω–∫–µ", "–ü—Ä–∏–µ–º –ø–ª–∞—Ç–µ–∂–µ–π –ø–æ –∫–∞—Ä—Ç–∞–º", "–í—ã–¥–∞—á–∞ –∫—Ä–µ–¥–∏—Ç–æ–≤", "–û–±–º–µ–Ω –≤–∞–ª—é—Ç—ã"],
          correct: 1,
          explanation: "–≠–∫–≤–∞–π—Ä–∏–Ω–≥ - —ç—Ç–æ —É—Å–ª—É–≥–∞ –ø–æ –ø—Ä–∏–µ–º—É –ø–ª–∞—Ç–µ–∂–µ–π —Å –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –∫–∞—Ä—Ç —á–µ—Ä–µ–∑ —Ç–µ—Ä–º–∏–Ω–∞–ª—ã –∏–ª–∏ –æ–Ω–ª–∞–π–Ω.",
        },
      ],
    },
    {
      id: "crypto",
      title: "–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã",
      description: "–û—Å–Ω–æ–≤—ã —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –≤–∞–ª—é—Ç –∏ –±–ª–æ–∫—á–µ–π–Ω —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π",
      icon: "‚Çø",
      reward: 85,
      difficulty: "–°–ª–æ–∂–Ω—ã–π",
      questions: [
        {
          id: 1,
          question: "–ß—Ç–æ —Ç–∞–∫–æ–µ –±–ª–æ–∫—á–µ–π–Ω?",
          options: ["–í–∏–¥ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã", "–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö", "–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞", "–ü–ª–∞—Ç–µ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞"],
          correct: 1,
          explanation:
            "–ë–ª–æ–∫—á–µ–π–Ω - —ç—Ç–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö, —Å–æ—Å—Ç–æ—è—â–∞—è –∏–∑ —Ü–µ–ø–æ—á–∫–∏ –±–ª–æ–∫–æ–≤ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö.",
        },
        {
          id: 2,
          question: "–ö—Ç–æ —Å–æ–∑–¥–∞–ª Bitcoin?",
          options: ["–ò–ª–æ–Ω –ú–∞—Å–∫", "–°–∞—Ç–æ—à–∏ –ù–∞–∫–∞–º–æ—Ç–æ", "–í–∏—Ç–∞–ª–∏–∫ –ë—É—Ç–µ—Ä–∏–Ω", "–ú–∞—Ä–∫ –¶—É–∫–µ—Ä–±–µ—Ä–≥"],
          correct: 1,
          explanation: "Bitcoin –±—ã–ª —Å–æ–∑–¥–∞–Ω –ø–æ–¥ –ø—Å–µ–≤–¥–æ–Ω–∏–º–æ–º –°–∞—Ç–æ—à–∏ –ù–∞–∫–∞–º–æ—Ç–æ, –ª–∏—á–Ω–æ—Å—Ç—å –∫–æ—Ç–æ—Ä–æ–≥–æ –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π.",
        },
        {
          id: 3,
          question: "–ß—Ç–æ —Ç–∞–∫–æ–µ –º–∞–π–Ω–∏–Ω–≥?",
          options: [
            "–ü–æ–∫—É–ø–∫–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç",
            "–ü—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –±–ª–æ–∫–æ–≤ –≤ –±–ª–æ–∫—á–µ–π–Ω–µ",
            "–û–±–º–µ–Ω –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç",
            "–•—Ä–∞–Ω–µ–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç",
          ],
          correct: 1,
          explanation: "–ú–∞–π–Ω–∏–Ω–≥ - —ç—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –±–ª–æ–∫–æ–≤ –≤ –±–ª–æ–∫—á–µ–π–Ω–µ —Å –ø–æ–º–æ—â—å—é –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –º–æ—â–Ω–æ—Å—Ç–µ–π.",
        },
        {
          id: 4,
          question: "–ß—Ç–æ —Ç–∞–∫–æ–µ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç?",
          options: ["–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å —Ü–µ–Ω—ã", "–í—ã—Å–æ–∫–∞—è –∏–∑–º–µ–Ω—á–∏–≤–æ—Å—Ç—å —Ü–µ–Ω—ã", "–ù–∏–∑–∫–∞—è –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å", "–°–∫–æ—Ä–æ—Å—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π"],
          correct: 1,
          explanation:
            "–í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å - —ç—Ç–æ –≤—ã—Å–æ–∫–∞—è –∏–∑–º–µ–Ω—á–∏–≤–æ—Å—Ç—å —Ü–µ–Ω—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –∏—Ö —Ä–∏—Å–∫–æ–≤–∞–Ω–Ω—ã–º–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º–∏.",
        },
      ],
    },
    {
      id: "retirement",
      title: "–ü–µ–Ω—Å–∏–æ–Ω–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ",
      description: "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ø–µ–Ω—Å–∏–∏ –∏ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ",
      icon: "üë¥",
      reward: 75,
      difficulty: "–°—Ä–µ–¥–Ω–∏–π",
      questions: [
        {
          id: 1,
          question: "–ò–∑ —á–µ–≥–æ —Å–æ—Å—Ç–æ–∏—Ç –ø–µ–Ω—Å–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –†–æ—Å—Å–∏–∏?",
          options: [
            "–¢–æ–ª—å–∫–æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–∞—è –ø–µ–Ω—Å–∏—è",
            "–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–∞—è, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω–∞—è –∏ –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–∞—è",
            "–¢–æ–ª—å–∫–æ –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ–Ω—Å–∏—è",
            "–¢–æ–ª—å–∫–æ –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–∞—è –ø–µ–Ω—Å–∏—è",
          ],
          correct: 1,
          explanation:
            "–ü–µ–Ω—Å–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –†–æ—Å—Å–∏–∏ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —Ç—Ä–µ—Ö —É—Ä–æ–≤–Ω–µ–π: –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏ –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–æ–≥–æ.",
        },
        {
          id: 2,
          question: "–ß—Ç–æ —Ç–∞–∫–æ–µ –ù–ü–§?",
          options: [
            "–ù–∞–ª–æ–≥–æ–≤—ã–π –ø–µ–Ω—Å–∏–æ–Ω–Ω—ã–π —Ñ–æ–Ω–¥",
            "–ù–µ–≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–µ–Ω—Å–∏–æ–Ω–Ω—ã–π —Ñ–æ–Ω–¥",
            "–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–µ–Ω—Å–∏–æ–Ω–Ω—ã–π —Ñ–æ–Ω–¥",
            "–ù–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ–Ω—Å–∏–æ–Ω–Ω—ã–π —Ñ–æ–Ω–¥",
          ],
          correct: 1,
          explanation: "–ù–ü–§ - –Ω–µ–≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–µ–Ω—Å–∏–æ–Ω–Ω—ã–π —Ñ–æ–Ω–¥, –∫–æ—Ç–æ—Ä—ã–π —É–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω–æ–π —á–∞—Å—Ç—å—é –ø–µ–Ω—Å–∏–∏.",
        },
        {
          id: 3,
          question: "–í–æ —Å–∫–æ–ª—å–∫–æ –ª–µ—Ç –º–æ–∂–Ω–æ –≤—ã–π—Ç–∏ –Ω–∞ –ø–µ–Ω—Å–∏—é –≤ –†–æ—Å—Å–∏–∏?",
          options: ["55/60 –ª–µ—Ç", "60/65 –ª–µ—Ç", "65/70 –ª–µ—Ç", "70/75 –ª–µ—Ç"],
          correct: 1,
          explanation:
            "–ü–æ—Å–ª–µ –ø–µ–Ω—Å–∏–æ–Ω–Ω–æ–π —Ä–µ—Ñ–æ—Ä–º—ã –ø–µ–Ω—Å–∏–æ–Ω–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç –≤ –†–æ—Å—Å–∏–∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 60 –ª–µ—Ç –¥–ª—è –∂–µ–Ω—â–∏–Ω –∏ 65 –ª–µ—Ç –¥–ª—è –º—É–∂—á–∏–Ω.",
        },
        {
          id: 4,
          question: "–ö–∞–∫–æ–π –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç –∑–∞—Ä–ø–ª–∞—Ç—ã —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—Ç–∫–ª–∞–¥—ã–≤–∞—Ç—å –Ω–∞ –ø–µ–Ω—Å–∏—é?",
          options: ["5-10%", "10-15%", "15-20%", "20-25%"],
          correct: 1,
          explanation: "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç—ã —Ä–µ–∫–æ–º–µ–Ω–¥—É—é—Ç –æ—Ç–∫–ª–∞–¥—ã–≤–∞—Ç—å 10-15% –æ—Ç –¥–æ—Ö–æ–¥–∞ –Ω–∞ –ø–µ–Ω—Å–∏–æ–Ω–Ω—ã–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è.",
        },
      ],
    },
  ]

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const AuthComponent = () => {
    const [email, setEmail] = useState("")
    const [password, setPassword] = useState("")
    const [name, setName] = useState("")
    const [confirmPassword, setConfirmPassword] = useState("")

    const handleLogin = (e) => {
      e.preventDefault()
      // –°–∏–º—É–ª—è—Ü–∏—è –≤—Ö–æ–¥–∞
      const userData = {
        id: 1,
        name: "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤",
        email: email,
        role: "teacher",
        avatar: "/placeholder.svg?height=40&width=40",
        joinDate: "2024-01-15",
        totalCoins: gameCoins,
        completedQuizzes: 12,
        completedScenarios: 5,
        badges: 8,
        level: "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π",
      }
      setUser(userData)
      setIsAuthenticated(true)
    }

    const handleRegister = (e) => {
      e.preventDefault()
      // –°–∏–º—É–ª—è—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      const userData = {
        id: 1,
        name: name,
        email: email,
        role: "teacher",
        avatar: "/placeholder.svg?height=40&width=40",
        joinDate: new Date().toISOString().split("T")[0],
        totalCoins: 0,
        completedQuizzes: 0,
        completedScenarios: 0,
        badges: 0,
        level: "–ù–æ–≤–∏—á–æ–∫",
      }
      setUser(userData)
      setIsAuthenticated(true)
    }

    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4">
        <Card className="w-full max-w-md">
          <CardHeader className="text-center">
            <div className="w-16 h-16 bg-gradient-to-r from-blue-600 to-indigo-600 rounded-lg flex items-center justify-center mx-auto mb-4">
              <Trophy className="w-8 h-8 text-white" />
            </div>
            <CardTitle className="text-2xl">FinanceGame Pro</CardTitle>
            <CardDescription>{showLogin ? "–í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç" : "–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç"}</CardDescription>
          </CardHeader>
          <CardContent>
            <form onSubmit={showLogin ? handleLogin : handleRegister} className="space-y-4">
              {!showLogin && (
                <div className="space-y-2">
                  <Label htmlFor="name">–ò–º—è</Label>
                  <Input
                    id="name"
                    type="text"
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
                    value={name}
                    onChange={(e) => setName(e.target.value)}
                    required
                  />
                </div>
              )}
              <div className="space-y-2">
                <Label htmlFor="email">Email</Label>
                <Input
                  id="email"
                  type="email"
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email"
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                  required
                />
              </div>
              <div className="space-y-2">
                <Label htmlFor="password">–ü–∞—Ä–æ–ª—å</Label>
                <Input
                  id="password"
                  type="password"
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                  value={password}
                  onChange={(e) => setPassword(e.target.value)}
                  required
                />
              </div>
              {!showLogin && (
                <div className="space-y-2">
                  <Label htmlFor="confirmPassword">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å</Label>
                  <Input
                    id="confirmPassword"
                    type="password"
                    placeholder="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                    value={confirmPassword}
                    onChange={(e) => setConfirmPassword(e.target.value)}
                    required
                  />
                </div>
              )}
              <Button type="submit" className="w-full">
                {showLogin ? "–í–æ–π—Ç–∏" : "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"}
              </Button>
            </form>
            <div className="mt-4 text-center">
              <Button variant="link" onClick={() => setShowLogin(!showLogin)}>
                {showLogin ? "–ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å" : "–£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? –í–æ–π–¥–∏—Ç–µ"}
              </Button>
            </div>
          </CardContent>
        </Card>
      </div>
    )
  }

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–æ—Ñ–∏–ª—è
  const ProfileComponent = () => {
    const [profileTab, setProfileTab] = useState("overview")

    return (
      <div className="space-y-6">
        <Card>
          <CardHeader>
            <div className="flex items-center space-x-4">
              <Avatar className="w-20 h-20">
                <AvatarImage src={user.avatar || "/placeholder.svg"} />
                <AvatarFallback className="text-2xl">
                  {user.name
                    .split(" ")
                    .map((n) => n[0])
                    .join("")}
                </AvatarFallback>
              </Avatar>
              <div className="flex-1">
                <h2 className="text-2xl font-bold">{user.name}</h2>
                <p className="text-muted-foreground">{user.email}</p>
                <div className="flex items-center space-x-4 mt-2">
                  <Badge variant="outline">{user.level}</Badge>
                  <div className="flex items-center space-x-1">
                    <Calendar className="w-4 h-4" />
                    <span className="text-sm">–° {new Date(user.joinDate).toLocaleDateString()}</span>
                  </div>
                </div>
              </div>
              <Button variant="outline" onClick={() => setIsAuthenticated(false)}>
                <LogOut className="w-4 h-4 mr-2" />
                –í—ã–π—Ç–∏
              </Button>
            </div>
          </CardHeader>
        </Card>

        <Tabs value={profileTab} onValueChange={setProfileTab}>
          <TabsList className="grid w-full grid-cols-4">
            <TabsTrigger value="overview">–û–±–∑–æ—Ä</TabsTrigger>
            <TabsTrigger value="achievements">–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</TabsTrigger>
            <TabsTrigger value="statistics">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</TabsTrigger>
            <TabsTrigger value="settings">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</TabsTrigger>
          </TabsList>

          <TabsContent value="overview" className="space-y-6">
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
              <Card>
                <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                  <CardTitle className="text-sm font-medium">–û–±—â–∏–µ –º–æ–Ω–µ—Ç—ã</CardTitle>
                  <Coins className="h-4 w-4 text-yellow-600" />
                </CardHeader>
                <CardContent>
                  <div className="text-2xl font-bold">{user.totalCoins.toLocaleString()}</div>
                  <p className="text-xs text-muted-foreground">FinanceCoins</p>
                </CardContent>
              </Card>

              <Card>
                <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                  <CardTitle className="text-sm font-medium">–ü—Ä–æ–π–¥–µ–Ω–æ –∫–≤–∏–∑–æ–≤</CardTitle>
                  <BookOpen className="h-4 w-4 text-blue-600" />
                </CardHeader>
                <CardContent>
                  <div className="text-2xl font-bold">{user.completedQuizzes}</div>
                  <p className="text-xs text-muted-foreground">–∏–∑ {quizCategories.length * 5} –¥–æ—Å—Ç—É–ø–Ω—ã—Ö</p>
                </CardContent>
              </Card>

              <Card>
                <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                  <CardTitle className="text-sm font-medium">–ó–∞–≤–µ—Ä—à–µ–Ω–æ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤</CardTitle>
                  <Play className="h-4 w-4 text-green-600" />
                </CardHeader>
                <CardContent>
                  <div className="text-2xl font-bold">{user.completedScenarios}</div>
                  <p className="text-xs text-muted-foreground">–∏–∑ 10 –¥–æ—Å—Ç—É–ø–Ω—ã—Ö</p>
                </CardContent>
              </Card>

              <Card>
                <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                  <CardTitle className="text-sm font-medium">–ü–æ–ª—É—á–µ–Ω–æ –±–µ–π–¥–∂–µ–π</CardTitle>
                  <Award className="h-4 w-4 text-purple-600" />
                </CardHeader>
                <CardContent>
                  <div className="text-2xl font-bold">{user.badges}</div>
                  <p className="text-xs text-muted-foreground">–∏–∑ 20 –¥–æ—Å—Ç—É–ø–Ω—ã—Ö</p>
                </CardContent>
              </Card>
            </div>

            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
              <Card>
                <CardHeader>
                  <CardTitle>–ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º</CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  {quizCategories.slice(0, 5).map((category) => {
                    const progress = Math.floor(Math.random() * 100)
                    return (
                      <div key={category.id} className="space-y-2">
                        <div className="flex justify-between text-sm">
                          <span className="flex items-center space-x-2">
                            <span>{category.icon}</span>
                            <span>{category.title}</span>
                          </span>
                          <span>{progress}%</span>
                        </div>
                        <Progress value={progress} className="h-2" />
                      </div>
                    )
                  })}
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle>–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  {[
                    { action: "–ó–∞–≤–µ—Ä—à–µ–Ω –∫–≤–∏–∑ '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏'", time: "2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥", icon: "üìà" },
                    { action: "–ü–æ–ª—É—á–µ–Ω –±–µ–π–¥–∂ '–ú–∞—Å—Ç–µ—Ä –±—é–¥–∂–µ—Ç–∞'", time: "1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥", icon: "üèÜ" },
                    { action: "–ü—Ä–æ–π–¥–µ–Ω —Å—Ü–µ–Ω–∞—Ä–∏–π '–ü–µ—Ä–≤–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞'", time: "2 –¥–Ω—è –Ω–∞–∑–∞–¥", icon: "üí∞" },
                    { action: "–û—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω QR-–∫–æ–¥", time: "3 –¥–Ω—è –Ω–∞–∑–∞–¥", icon: "üì±" },
                  ].map((activity, index) => (
                    <div key={index} className="flex items-center space-x-3">
                      <div className="text-2xl">{activity.icon}</div>
                      <div className="flex-1">
                        <p className="text-sm font-medium">{activity.action}</p>
                        <p className="text-xs text-muted-foreground">{activity.time}</p>
                      </div>
                    </div>
                  ))}
                </CardContent>
              </Card>
            </div>
          </TabsContent>

          <TabsContent value="achievements" className="space-y-6">
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {[
                { name: "–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏", description: "–ó–∞–≤–µ—Ä—à–∏—Ç–µ –ø–µ—Ä–≤—ã–π –∫–≤–∏–∑", icon: "üéØ", earned: true },
                {
                  name: "–ú–∞—Å—Ç–µ—Ä –±—é–¥–∂–µ—Ç–∞",
                  description: "–ü—Ä–æ–π–¥–∏—Ç–µ –≤—Å–µ –∫–≤–∏–∑—ã –ø–æ –±—é–¥–∂–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—é",
                  icon: "üí∞",
                  earned: true,
                },
                { name: "–ò–Ω–≤–µ—Å—Ç–æ—Ä", description: "–ò–∑—É—á–∏—Ç–µ –æ—Å–Ω–æ–≤—ã –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è", icon: "üìà", earned: true },
                { name: "–ù–∞–ª–æ–≥–æ–≤—ã–π —ç–∫—Å–ø–µ—Ä—Ç", description: "–û—Å–≤–æ–π—Ç–µ –Ω–∞–ª–æ–≥–æ–≤–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ", icon: "üìã", earned: false },
                {
                  name: "–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å",
                  description: "–ü—Ä–æ–π–¥–∏—Ç–µ –∫—É—Ä—Å –ø–æ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å—Ç–≤—É",
                  icon: "üöÄ",
                  earned: false,
                },
                { name: "–ö—Ä–∏–ø—Ç–æ—ç–Ω—Ç—É–∑–∏–∞—Å—Ç", description: "–ò–∑—É—á–∏—Ç–µ –º–∏—Ä –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç", icon: "‚Çø", earned: false },
                { name: "–ü–µ–Ω—Å–∏–æ–Ω–Ω—ã–π –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫", description: "–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ –ø–µ–Ω—Å–∏–∏", icon: "üë¥", earned: false },
                { name: "AR-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å", description: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Å–µ AR-—ç–ª–µ–º–µ–Ω—Ç—ã", icon: "ü•Ω", earned: true },
                { name: "QR-–º–∞—Å—Ç–µ—Ä", description: "–û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ 50 QR-–∫–æ–¥–æ–≤", icon: "üì±", earned: false },
              ].map((achievement, index) => (
                <Card key={index} className={achievement.earned ? "border-yellow-200 bg-yellow-50" : ""}>
                  <CardHeader>
                    <div className="flex items-center space-x-3">
                      <div className="text-3xl">{achievement.icon}</div>
                      <div>
                        <CardTitle className="text-lg">{achievement.name}</CardTitle>
                        <CardDescription>{achievement.description}</CardDescription>
                      </div>
                    </div>
                  </CardHeader>
                  <CardContent>
                    {achievement.earned ? (
                      <Badge variant="default" className="bg-yellow-600">
                        <CheckCircle className="w-3 h-3 mr-1" />
                        –ü–æ–ª—É—á–µ–Ω–æ
                      </Badge>
                    ) : (
                      <Badge variant="outline">–ù–µ –ø–æ–ª—É—á–µ–Ω–æ</Badge>
                    )}
                  </CardContent>
                </Card>
              ))}
            </div>
          </TabsContent>

          <TabsContent value="statistics" className="space-y-6">
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
              <Card>
                <CardHeader>
                  <CardTitle>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–≤–∏–∑–æ–≤</CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  {quizCategories.map((category) => {
                    const completed = Math.floor(Math.random() * category.questions.length)
                    const accuracy = Math.floor(Math.random() * 40) + 60
                    return (
                      <div key={category.id} className="flex items-center justify-between p-3 border rounded-lg">
                        <div className="flex items-center space-x-3">
                          <span className="text-2xl">{category.icon}</span>
                          <div>
                            <p className="font-medium">{category.title}</p>
                            <p className="text-sm text-muted-foreground">
                              {completed}/{category.questions.length} –≤–æ–ø—Ä–æ—Å–æ–≤
                            </p>
                          </div>
                        </div>
                        <div className="text-right">
                          <p className="font-bold text-green-600">{accuracy}%</p>
                          <p className="text-xs text-muted-foreground">—Ç–æ—á–Ω–æ—Å—Ç—å</p>
                        </div>
                      </div>
                    )
                  })}
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle>–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –º–æ–Ω–µ—Ç—ã</CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  {[
                    { source: "–ö–≤–∏–∑—ã", amount: 850, icon: "üìö" },
                    { source: "–°—Ü–µ–Ω–∞—Ä–∏–∏", amount: 400, icon: "üéÆ" },
                    { source: "–ë–æ–Ω—É—Å—ã", amount: 200, icon: "üéÅ" },
                    { source: "–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è", amount: 150, icon: "üèÜ" },
                  ].map((earning, index) => (
                    <div key={index} className="flex items-center justify-between p-3 border rounded-lg">
                      <div className="flex items-center space-x-3">
                        <span className="text-2xl">{earning.icon}</span>
                        <span className="font-medium">{earning.source}</span>
                      </div>
                      <div className="flex items-center space-x-2">
                        <Coins className="w-4 h-4 text-yellow-600" />
                        <span className="font-bold">{earning.amount}</span>
                      </div>
                    </div>
                  ))}
                </CardContent>
              </Card>
            </div>
          </TabsContent>

          <TabsContent value="settings" className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è</CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="space-y-2">
                  <Label htmlFor="profile-name">–ò–º—è</Label>
                  <Input id="profile-name" defaultValue={user.name} />
                </div>
                <div className="space-y-2">
                  <Label htmlFor="profile-email">Email</Label>
                  <Input id="profile-email" type="email" defaultValue={user.email} />
                </div>
                <div className="space-y-2">
                  <Label htmlFor="profile-bio">–û —Å–µ–±–µ</Label>
                  <Textarea id="profile-bio" placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ..." />
                </div>
                <Button>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è</Button>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="font-medium">Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</p>
                    <p className="text-sm text-muted-foreground">–ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö</p>
                  </div>
                  <Button variant="outline" size="sm">
                    –í–∫–ª—é—á–µ–Ω–æ
                  </Button>
                </div>
                <div className="flex items-center justify-between">
                  <div>
                    <p className="font-medium">Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</p>
                    <p className="text-sm text-muted-foreground">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ</p>
                  </div>
                  <Button variant="outline" size="sm">
                    –í—ã–∫–ª—é—á–µ–Ω–æ
                  </Button>
                </div>
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>
      </div>
    )
  }

  // –û—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã (QuizInterface, ScenarioPlayer, QRScanner) –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
  const QuizInterface = ({ quiz, onComplete, onBack, userAnswers, setUserAnswers }) => {
    const [currentQuestion, setCurrentQuestion] = useState(0)
    const [showResult, setShowResult] = useState(false)
    const [score, setScore] = useState(0)

    const handleAnswer = (questionId, answerIndex) => {
      setUserAnswers((prev) => ({
        ...prev,
        [questionId]: answerIndex,
      }))
    }

    const handleNext = () => {
      if (currentQuestion < quiz.questions.length - 1) {
        setCurrentQuestion((prev) => prev + 1)
      } else {
        calculateScore()
      }
    }

    const calculateScore = () => {
      let correctAnswers = 0
      quiz.questions.forEach((question) => {
        if (userAnswers[question.id] === question.correct) {
          correctAnswers++
        }
      })
      const finalScore = Math.round((correctAnswers / quiz.questions.length) * 100)
      const earnedCoins = Math.round((finalScore / 100) * quiz.reward)
      setScore(finalScore)
      setShowResult(true)
      setTimeout(() => {
        onComplete(finalScore, earnedCoins)
      }, 3000)
    }

    const question = quiz.questions[currentQuestion]

    if (showResult) {
      const earnedCoins = Math.round((score / 100) * quiz.reward)
      return (
        <Card className="max-w-2xl mx-auto">
          <CardHeader className="text-center">
            <div className="text-6xl mb-4">{score >= 80 ? "üèÜ" : score >= 60 ? "ü•à" : score >= 40 ? "ü•â" : "üìö"}</div>
            <CardTitle className="text-2xl">–ö–≤–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!</CardTitle>
            <CardDescription>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ —Ç–µ–º–µ: {quiz.title}</CardDescription>
          </CardHeader>
          <CardContent className="text-center space-y-4">
            <div className="text-4xl font-bold text-blue-600">{score}%</div>
            <p className="text-lg">
              –ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {Math.round((score / 100) * quiz.questions.length)} –∏–∑ {quiz.questions.length}
            </p>
            <div className="flex items-center justify-center space-x-2 bg-yellow-100 px-4 py-2 rounded-full">
              <span className="text-2xl">ü™ô</span>
              <span className="font-bold text-yellow-800">+{earnedCoins} FinanceCoins</span>
            </div>
          </CardContent>
        </Card>
      )
    }

    return (
      <Card className="max-w-2xl mx-auto">
        <CardHeader>
          <div className="flex justify-between items-center">
            <Button variant="outline" onClick={onBack}>
              ‚Üê –ù–∞–∑–∞–¥ –∫ –∫–≤–∏–∑–∞–º
            </Button>
            <Badge variant="outline">
              {currentQuestion + 1} –∏–∑ {quiz.questions.length}
            </Badge>
          </div>
          <CardTitle className="flex items-center space-x-3">
            <span className="text-2xl">{quiz.icon}</span>
            <span>{quiz.title}</span>
          </CardTitle>
          <Progress value={((currentQuestion + 1) / quiz.questions.length) * 100} className="w-full" />
        </CardHeader>
        <CardContent className="space-y-6">
          <div>
            <h3 className="text-lg font-semibold mb-4">{question.question}</h3>
            <div className="space-y-3">
              {question.options.map((option, index) => (
                <div
                  key={index}
                  className={`p-4 border rounded-lg cursor-pointer transition-colors ${
                    userAnswers[question.id] === index
                      ? "border-blue-500 bg-blue-50"
                      : "border-gray-200 hover:border-gray-300"
                  }`}
                  onClick={() => handleAnswer(question.id, index)}
                >
                  <div className="flex items-center space-x-3">
                    <div
                      className={`w-4 h-4 rounded-full border-2 ${
                        userAnswers[question.id] === index ? "border-blue-500 bg-blue-500" : "border-gray-300"
                      }`}
                    >
                      {userAnswers[question.id] === index && (
                        <div className="w-full h-full rounded-full bg-white scale-50"></div>
                      )}
                    </div>
                    <span>{option}</span>
                  </div>
                </div>
              ))}
            </div>
          </div>

          <div className="flex justify-between items-center">
            <Button
              variant="outline"
              onClick={() => setCurrentQuestion((prev) => Math.max(0, prev - 1))}
              disabled={currentQuestion === 0}
            >
              –ü—Ä–µ–¥—ã–¥—É—â–∏–π
            </Button>
            <Button onClick={handleNext} disabled={userAnswers[question.id] === undefined}>
              {currentQuestion === quiz.questions.length - 1 ? "–ó–∞–≤–µ—Ä—à–∏—Ç—å" : "–°–ª–µ–¥—É—é—â–∏–π"}
            </Button>
          </div>
        </CardContent>
      </Card>
    )
  }

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞
  if (!isAuthenticated) {
    return <AuthComponent />
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
      <header className="bg-white shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center py-4">
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-gradient-to-r from-blue-600 to-indigo-600 rounded-lg flex items-center justify-center">
                <Trophy className="w-6 h-6 text-white" />
              </div>
              <div>
                <h1 className="text-xl font-bold text-gray-900">FinanceGame Pro</h1>
                <p className="text-sm text-gray-500">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.name}!</p>
              </div>
            </div>
            <div className="flex items-center space-x-4">
              <div className="flex items-center space-x-2 bg-yellow-100 px-3 py-1 rounded-full">
                <Coins className="w-4 h-4 text-yellow-600" />
                <span className="font-bold text-yellow-800">{gameCoins.toLocaleString()}</span>
              </div>
              <Button variant="outline" size="sm" onClick={() => setActiveTab("profile")}>
                <User className="w-4 h-4 mr-2" />
                –ü—Ä–æ—Ñ–∏–ª—å
              </Button>
              <Avatar className="cursor-pointer" onClick={() => setActiveTab("profile")}>
                <AvatarImage src={user.avatar || "/placeholder.svg"} />
                <AvatarFallback>
                  {user.name
                    .split(" ")
                    .map((n) => n[0])
                    .join("")}
                </AvatarFallback>
              </Avatar>
            </div>
          </div>
        </div>
      </header>

      <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <Tabs value={activeTab} onValueChange={setActiveTab} className="space-y-6">
          <TabsList className="grid w-full grid-cols-7">
            <TabsTrigger value="dashboard" className="flex items-center space-x-2">
              <BarChart3 className="w-4 h-4" />
              <span>–î–∞—à–±–æ—Ä–¥</span>
            </TabsTrigger>
            <TabsTrigger value="students" className="flex items-center space-x-2">
              <Users className="w-4 h-4" />
              <span>–£—á–µ–Ω–∏–∫–∏</span>
            </TabsTrigger>
            <TabsTrigger value="quizzes" className="flex items-center space-x-2">
              <BookOpen className="w-4 h-4" />
              <span>–ö–≤–∏–∑—ã</span>
            </TabsTrigger>
            <TabsTrigger value="scenarios" className="flex items-center space-x-2">
              <Play className="w-4 h-4" />
              <span>–°—Ü–µ–Ω–∞—Ä–∏–∏</span>
            </TabsTrigger>
            <TabsTrigger value="gamification" className="flex items-center space-x-2">
              <Trophy className="w-4 h-4" />
              <span>–ì–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—è</span>
            </TabsTrigger>
            <TabsTrigger value="integration" className="flex items-center space-x-2">
              <Smartphone className="w-4 h-4" />
              <span>–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è</span>
            </TabsTrigger>
            <TabsTrigger value="profile" className="flex items-center space-x-2">
              <User className="w-4 h-4" />
              <span>–ü—Ä–æ—Ñ–∏–ª—å</span>
            </TabsTrigger>
          </TabsList>

          <TabsContent value="profile">
            <ProfileComponent />
          </TabsContent>

          <TabsContent value="quizzes" className="space-y-6">
            <div className="flex justify-between items-center">
              <h2 className="text-2xl font-bold">–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–≤–∏–∑—ã</h2>
              <div className="flex items-center space-x-4">
                <div className="flex items-center space-x-2 bg-yellow-100 px-3 py-1 rounded-full">
                  <span className="text-2xl">ü™ô</span>
                  <span className="font-bold text-yellow-800">{gameCoins.toLocaleString()}</span>
                </div>
              </div>
            </div>

            {!currentQuiz ? (
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {quizCategories.map((category) => (
                  <Card key={category.id} className="hover:shadow-lg transition-shadow cursor-pointer">
                    <CardHeader>
                      <div className="flex items-center justify-between">
                        <div className="flex items-center space-x-3">
                          <div className="text-3xl">{category.icon}</div>
                          <div>
                            <CardTitle className="text-lg">{category.title}</CardTitle>
                            <CardDescription>{category.description}</CardDescription>
                          </div>
                        </div>
                      </div>
                    </CardHeader>
                    <CardContent className="space-y-4">
                      <div className="flex justify-between items-center">
                        <div className="flex items-center space-x-2">
                          <span className="text-2xl">ü™ô</span>
                          <span className="font-bold text-green-600">+{category.reward}</span>
                        </div>
                        <div className="flex items-center space-x-2">
                          <Badge variant="outline">{category.questions.length} –≤–æ–ø—Ä–æ—Å–æ–≤</Badge>
                          <Badge
                            variant={
                              category.difficulty === "–õ–µ–≥–∫–∏–π"
                                ? "default"
                                : category.difficulty === "–°—Ä–µ–¥–Ω–∏–π"
                                  ? "secondary"
                                  : "destructive"
                            }
                          >
                            {category.difficulty}
                          </Badge>
                        </div>
                      </div>
                      <Button className="w-full" onClick={() => setCurrentQuiz(category)}>
                        –ù–∞—á–∞—Ç—å –∫–≤–∏–∑
                      </Button>
                    </CardContent>
                  </Card>
                ))}
              </div>
            ) : (
              <QuizInterface
                quiz={currentQuiz}
                onComplete={(score, earnedCoins) => {
                  setQuizScore(score)
                  setGameCoins((prev) => prev + earnedCoins)
                  setCurrentQuiz(null)
                  setUserAnswers({})
                }}
                onBack={() => {
                  setCurrentQuiz(null)
                  setUserAnswers({})
                }}
                userAnswers={userAnswers}
                setUserAnswers={setUserAnswers}
              />
            )}
          </TabsContent>

          {/* –û—Å—Ç–∞–ª—å–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π */}
          <TabsContent value="dashboard" className="space-y-6">
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-6">
              <Card>
                <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                  <CardTitle className="text-sm font-medium">–ê–∫—Ç–∏–≤–Ω—ã–µ —É—á–µ–Ω–∏–∫–∏</CardTitle>
                  <Users className="h-4 w-4 text-muted-foreground" />
                </CardHeader>
                <CardContent>
                  <div className="text-2xl font-bold">24</div>
                  <p className="text-xs text-muted-foreground">+2 –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é</p>
                </CardContent>
              </Card>

              <Card>
                <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                  <CardTitle className="text-sm font-medium">–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∏–≥—Ä—ã</CardTitle>
                  <Target className="h-4 w-4 text-muted-foreground" />
                </CardHeader>
                <CardContent>
                  <div className="text-2xl font-bold">156</div>
                  <p className="text-xs text-muted-foreground">+12% –æ—Ç –ø—Ä–æ—à–ª–æ–≥–æ –º–µ—Å—è—Ü–∞</p>
                </CardContent>
              </Card>

              <Card>
                <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                  <CardTitle className="text-sm font-medium">–°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å</CardTitle>
                  <TrendingUp className="h-4 w-4 text-muted-foreground" />
                </CardHeader>
                <CardContent>
                  <div className="text-2xl font-bold">78%</div>
                  <p className="text-xs text-muted-foreground">+5% —É–ª—É—á—à–µ–Ω–∏–µ</p>
                </CardContent>
              </Card>

              <Card>
                <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                  <CardTitle className="text-sm font-medium">–í—ã–¥–∞–Ω–Ω—ã–µ –±–µ–π–¥–∂–∏</CardTitle>
                  <Award className="h-4 w-4 text-muted-foreground" />
                </CardHeader>
                <CardContent>
                  <div className="text-2xl font-bold">89</div>
                  <p className="text-xs text-muted-foreground">–ó–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü</p>
                </CardContent>
              </Card>

              <Card>
                <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                  <CardTitle className="text-sm font-medium">–ò–≥—Ä–æ–≤–∞—è –≤–∞–ª—é—Ç–∞</CardTitle>
                  <div className="text-2xl">ü™ô</div>
                </CardHeader>
                <CardContent>
                  <div className="text-2xl font-bold">{gameCoins.toLocaleString()}</div>
                  <p className="text-xs text-muted-foreground">FinanceCoins –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ</p>
                </CardContent>
              </Card>
            </div>
          </TabsContent>
        </Tabs>
      </main>
    </div>
  )
}
